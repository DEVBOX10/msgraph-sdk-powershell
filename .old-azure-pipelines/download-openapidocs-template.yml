# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

parameters:
- name: BUILDNUMBER
  displayName: 'Build Number'
  type: string
  default: $[format('{0:yyMMddHH}', pipeline.startTime)]

jobs:
- job: MsGraphDownloadOpenApiDocs
  displayName: Microsoft Graph PowerShell SDK Download OpenApiDocs Module Generation
  pool: MsGraphDevXAzureAgents
  timeoutInMinutes: 600

  steps:
  - checkout: self
    persistCredentials: true

  - template: ./install-tools-template.yml

  - task: PowerShell@2
    displayName: 'Download v1.0 OpenApiDocs'
    continueOnError: true
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    inputs:
      targetType: 'filePath'
      pwsh: true
      filePath: '$(System.DefaultWorkingDirectory)/tools/UpdateOpenApi.ps1'
      

  - task: PowerShell@2
    displayName: 'Download beta OpenApiDocs'
    continueOnError: false
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    inputs:
      targetType: 'filePath'
      pwsh: true
      filePath: '$(System.DefaultWorkingDirectory)/tools/UpdateOpenApi.ps1'
      arguments: > 
         -BetaGraphVersion

  - task: PowerShell@2
    displayName: "Configure User"
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    inputs:
      targetType: 'inline'
      pwsh: true
      script: |
        git config --global user.email 'GraphTooling@service.microsoft.com'
        git config --global user.name 'Microsoft Graph DevX Tooling'

  - task: PowerShell@2
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    env: 
      GITHUB_TOKEN: $(GITHUB_TOKEN)
    inputs:
      targetType: 'inline'
      script: |
          $date = Get-Date -Format yyyyMMddHH
          $docsBranch = "{0}{1}" -f $date, "buildDocsDownload"
          git status
          git checkout '$(Build.SourceBranchName)'
          git branch $docsBranch
          git checkout $docsBranch
          git status
          git add .
          git commit -m '$(BUILDNUMBER): Build OpenApiDocs Download [skip ci]'
          git status
          git push --set-upstream origin $docsBranch
          git status