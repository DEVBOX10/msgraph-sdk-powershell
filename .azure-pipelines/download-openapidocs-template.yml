# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

parameters:
- name: BUILDNUMBER
  displayName: 'Build Number'
  type: string
  default: $[format('{0:yyMMddHH}', pipeline.startTime)]

jobs:
- job: MsGraphDownloadOpenApiDocs
  displayName: Microsoft Graph PowerShell SDK Download OpenApiDocs Module Generation
  pool: MsGraphDevXAzureAgents
  timeoutInMinutes: 600

  steps:
  - checkout: self
    persistCredentials: true

  - template: ./install-tools-template.yml

  - task: PowerShell@2
    displayName: 'Download v1.0 OpenApiDocs'
    continueOnError: true
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    inputs:
      targetType: 'filePath'
      pwsh: true
      filePath: '$(System.DefaultWorkingDirectory)/tools/UpdateOpenApi.ps1'
      

  - task: PowerShell@2
    displayName: 'Download beta OpenApiDocs'
    continueOnError: false
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    inputs:
      targetType: 'filePath'
      pwsh: true
      filePath: '$(System.DefaultWorkingDirectory)/tools/UpdateOpenApi.ps1'
      arguments: > 
         -BetaGraphVersion

  - task: PowerShell@2
    displayName: "Configure User"
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    inputs:
      targetType: 'inline'
      pwsh: true
      script: |
        git config --global user.email 'GraphTooling@service.microsoft.com'
        git config --global user.name 'Microsoft Graph DevX Tooling'

  - task: CmdLine@2
    condition: and(succeeded(), eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), false))
    env: 
      GITHUB_TOKEN: $(GITHUB_TOKEN)
    inputs:
      targetType: 'inline'
      script: |
        @echo off
        ECHO SOURCE BRANCH IS %BUILD_SOURCEBRANCH%
        IF %BUILD_SOURCEBRANCH% == refs/heads/master (
            ECHO Building master branch so no merge is needed.
        EXIT
        )
        SET sourceBranch=origin/%BUILD_SOURCEBRANCH:refs/heads/=%
        ECHO GIT CHECKOUT %sourceBranch%
        git checkout %sourceBranch%
        ECHO GIT STATUS
        git status
        ECHO GIT MERGE
        git add .
        git commit -m "$(BUILDNUMBER):  Release OpenApiDocs Download for $(BUILDNUMBER)[skip ci]"
        git merge %sourceBranch% -m "$(BUILDNUMBER):  Release OpenApiDocs Download for $(BUILDNUMBER)[skip ci]"
        git push origin HEAD:%sourceBranch%
        ECHO GIT STATUS
        git status
        ECHO GIT PUSH
        git push origin
        ECHO GIT STATUS
        git status